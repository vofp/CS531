set(production).
set(expand_relational_defs).

formulas(sos).
Adjacent([x, y], [u, v]) <-> ((x = u & (Succ(y,v) | Succ(v,y))) | (y = v & (Succ(x, u) | Succ(u, x)))).
-Breezy(x) & Adjacent(x,y) -> -Pit(y).
-Smelly(x) & Adjacent(x,y) -> -Wumpus(y).
all x (exists y (Adjacent(x,y) & Pit(y)) <-> Breezy(x)).
all x (exists y (Adjacent(x,y) & Wumpus(y)) <-> Smelly(x)).
Visited(x) <-> Agent(x).
Agent(x) -> -Pit(x).
Agent(x) -> -Wumpus(x).
OK(x) <-> (-Pit(x) & -(Wumpus(x) & WumpusAlive(1))) | Visited(x).

%Adjacent([x, y], [u, v]) <-> ((x = u & ((y + 1 = v) | (y + -1 = v) )) | (y = v & ( (x + 1 = u) | (x + -1 = u) ))).

% actions
Agent( [0,0]).
Agent( [1,0]).
Agent( [1,3]).

-Breezy([0,0]).
-Smelly([0,0]).
Breezy([1,0]).
-Smelly([1,0]).
-Breezy([1,3]).
-Smelly([1,3]).
WumpusAlive(1).


end_of_list.

formulas(goals).
% test cases %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Agent( [0,0]).		% True
%Agent( [0,2]).		% Fail

%Adjacent([0,0], [0,1]).	% True
%Adjacent([0,1], [0,0]).	% True
%Adjacent([2,1], [2,0]).	% True
%Adjacent([2,0], [2,1]).	% True
%Adjacent([0,0], [0,3]).	% Fail
Adjacent([0,0], [0,1]).	% True

%Breezy([0,0]).				% Fail
%Breezy([1,0]).				% True

%-Breezy([0,0]).			% True
%-Breezy([1,1]).			% Fail

%-Pit([0,3]).				% True - no breeze at 1,3 -> no pit adjacent
%-Pit([1,1]).				% Fail
%Breezy([0,0]).
%-Pit([1,0]).				% Should be Provable, but fails.

%-Pit([0,2]).


%OK([1,1], 0).
%-Pit([1,4]).

end_of_list.
